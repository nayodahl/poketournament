name: CI process for Symfony 5

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  build:

    runs-on: ubuntu-latest  
    services:  
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: poketournament-test
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3  
    strategy:
      fail-fast: true
      matrix:
        php-versions: ['8.0']
    steps:
    
    # —— Setup Github actions 🐙 —————————————————————————————————————————————
    # https://github.com/actions/checkout (official)
    - name: Checkout
      uses: actions/checkout@v2

    # https://github.com/shivammathur/setup-php (community)
    - name: Setup PHP, extensions and composer with shivammathur/setup-php
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, iconv, json, mbstring, pdo
      env:
        update: true

    - name: Start mysql service
      run: sudo /etc/init.d/mysql start

    - name: Setup problem matchers for PHPUnit
      run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

    - name: Check PHP Version
      run: php -v

    # —— Composer 🧙‍️ —————————————————————————————————————————————————————————
    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache composer dependencies
      uses: actions/cache@v1
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install Composer dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader

    ## —— Yarn 🐱 ————————————————————————————————————————————————————————————
    - name: Yarn setup
      uses: actions/setup-node@v2
      with:
        node-version: '15'
        registry-url: npm.fontawesome.com
    - run: yarn install
      env:
        NODE_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}

    - name: Yarn build
      run: yarn run encore production

    ## —— Doctrine 🐱 ————————————————————————————————————————————————————————————
    - name: Run Doctrine migrations and load fixtures
      run: |
        php bin/console doctrine:migrations:migrate || echo "No migrations found or migration failed"
        php bin/console doctrine:fixtures:load --append -n || echo "No fixtures found or fixtures load failed"
      env:
        DATABASE_URL: mysql://root:root@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/poketournament-test

    ## —— Tests ✅ ———————————————————————————————————————————————————————————
    - name: Run functionnal and unit tests
      run: APP_ENV=test php bin/phpunit